// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package gas

func (root *FunctionalComponent) UseStateBool(defaultVal bool) (func() bool, func(bool)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() bool { return getVal().(bool) }, func(newVal bool) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateString(defaultVal string) (func() string, func(string)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() string { return getVal().(string) }, func(newVal string) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateInt(defaultVal int) (func() int, func(int)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() int { return getVal().(int) }, func(newVal int) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateInt8(defaultVal int8) (func() int8, func(int8)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() int8 { return getVal().(int8) }, func(newVal int8) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateInt16(defaultVal int16) (func() int16, func(int16)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() int16 { return getVal().(int16) }, func(newVal int16) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateInt32(defaultVal int32) (func() int32, func(int32)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() int32 { return getVal().(int32) }, func(newVal int32) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateInt64(defaultVal int64) (func() int64, func(int64)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() int64 { return getVal().(int64) }, func(newVal int64) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateUint(defaultVal uint) (func() uint, func(uint)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() uint { return getVal().(uint) }, func(newVal uint) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateUint8(defaultVal uint8) (func() uint8, func(uint8)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() uint8 { return getVal().(uint8) }, func(newVal uint8) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateUint16(defaultVal uint16) (func() uint16, func(uint16)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() uint16 { return getVal().(uint16) }, func(newVal uint16) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateUint32(defaultVal uint32) (func() uint32, func(uint32)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() uint32 { return getVal().(uint32) }, func(newVal uint32) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateUint64(defaultVal uint64) (func() uint64, func(uint64)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() uint64 { return getVal().(uint64) }, func(newVal uint64) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateFloat32(defaultVal float32) (func() float32, func(float32)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() float32 { return getVal().(float32) }, func(newVal float32) { setVal(newVal) }
}

func (root *FunctionalComponent) UseStateFloat64(defaultVal float64) (func() float64, func(float64)) {
	getVal, setVal := root.UseState(defaultVal)
	return func() float64 { return getVal().(float64) }, func(newVal float64) { setVal(newVal) }
}
